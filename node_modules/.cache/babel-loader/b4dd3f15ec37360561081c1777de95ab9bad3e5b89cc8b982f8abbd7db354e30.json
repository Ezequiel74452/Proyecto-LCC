{"ast":null,"code":"export function numberToColor(num) {\n  switch (num) {\n    case 2:\n      return \"#249cd1\";\n    case 4:\n      return \"#ec893b\";\n    case 8:\n      return \"#e35b89\";\n    case 16:\n      return \"#af4e7a\";\n    case 32:\n      return \"#a63e4a\";\n    case 64:\n      return \"#8d6ebc\";\n    default:\n      return \"black\";\n  }\n}\nexport const equalPos = (posA, posB) => posA.toString() === posB.toString();\nexport const valueInPos = (pos, grid, numOfColumns) => {\n  return grid[pos[0] * numOfColumns + pos[1]];\n};\nexport const posInPath = (pos, path) => {\n  return path.some(posI => equalPos(posI, pos));\n};\nexport const connectionInPath = (posA, posB, path) => {\n  return path.some((pos, i) => equalPos(pos, posA) && i + 1 < path.length && equalPos(path[i + 1], posB));\n};\nexport const isAdyacent = (posA, posB) => {\n  return !equalPos(posA, posB) && Math.abs(posA[0] - posB[0]) <= 1 && Math.abs(posA[1] - posB[1]) <= 1;\n};\nconst smallerPow2GreaterOrEqualThan = num => {\n  const log2num = Math.floor(Math.log2(num));\n  return Math.pow(2, log2num) === num ? num : Math.pow(2, log2num + 1);\n};\nexport const joinResult = (path, grid, numOfColumns) => smallerPow2GreaterOrEqualThan(path.reduce((result, pos) => result + valueInPos(pos, grid, numOfColumns), 0));","map":{"version":3,"names":["numberToColor","num","equalPos","posA","posB","toString","valueInPos","pos","grid","numOfColumns","posInPath","path","some","posI","connectionInPath","i","length","isAdyacent","Math","abs","smallerPow2GreaterOrEqualThan","log2num","floor","log2","pow","joinResult","reduce","result"],"sources":["C:/Users/ezequ/Desktop/Estudio/UNS/Tercer Año/Primer cuatrimestre/Lógica para ciencias de la computación/Proyecto/tic-tac-toe/src/util.js"],"sourcesContent":["export function numberToColor(num) {\r\n    switch (num) {\r\n        case 2: return \"#249cd1\";\r\n        case 4: return \"#ec893b\";\r\n        case 8: return \"#e35b89\";\r\n        case 16: return \"#af4e7a\";\r\n        case 32: return \"#a63e4a\";\r\n        case 64: return \"#8d6ebc\";\r\n        default: return \"black\";\r\n    }\r\n}\r\n\r\nexport const equalPos = (posA, posB) => posA.toString() === posB.toString();\r\n\r\nexport const valueInPos = (pos, grid, numOfColumns) => {\r\n    return grid[pos[0] * numOfColumns + pos[1]];\r\n}\r\n\r\nexport const posInPath = (pos, path) => {\r\n    return path.some(posI => equalPos(posI, pos));\r\n}\r\n\r\nexport const connectionInPath = (posA, posB, path) => {\r\n    return path.some((pos, i) => equalPos(pos, posA) && i + 1 < path.length && equalPos(path[i + 1], posB));\r\n}\r\n\r\nexport const isAdyacent = (posA, posB) => {\r\n    return !equalPos(posA, posB) && Math.abs(posA[0] - posB[0]) <= 1 && Math.abs(posA[1] - posB[1]) <= 1;\r\n}\r\n\r\nconst smallerPow2GreaterOrEqualThan = (num) => {\r\n    const log2num = Math.floor(Math.log2(num));\r\n    return Math.pow(2, log2num) === num ? num : Math.pow(2, log2num + 1);\r\n}\r\n\r\nexport const joinResult = (path, grid, numOfColumns) => smallerPow2GreaterOrEqualThan(path.reduce((result, pos) => result + valueInPos(pos, grid, numOfColumns), 0));"],"mappings":"AAAA,OAAO,SAASA,aAAaA,CAACC,GAAG,EAAE;EAC/B,QAAQA,GAAG;IACP,KAAK,CAAC;MAAE,OAAO,SAAS;IACxB,KAAK,CAAC;MAAE,OAAO,SAAS;IACxB,KAAK,CAAC;MAAE,OAAO,SAAS;IACxB,KAAK,EAAE;MAAE,OAAO,SAAS;IACzB,KAAK,EAAE;MAAE,OAAO,SAAS;IACzB,KAAK,EAAE;MAAE,OAAO,SAAS;IACzB;MAAS,OAAO,OAAO;EAAC;AAEhC;AAEA,OAAO,MAAMC,QAAQ,GAAGA,CAACC,IAAI,EAAEC,IAAI,KAAKD,IAAI,CAACE,QAAQ,EAAE,KAAKD,IAAI,CAACC,QAAQ,EAAE;AAE3E,OAAO,MAAMC,UAAU,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,YAAY,KAAK;EACnD,OAAOD,IAAI,CAACD,GAAG,CAAC,CAAC,CAAC,GAAGE,YAAY,GAAGF,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC;AAED,OAAO,MAAMG,SAAS,GAAGA,CAACH,GAAG,EAAEI,IAAI,KAAK;EACpC,OAAOA,IAAI,CAACC,IAAI,CAACC,IAAI,IAAIX,QAAQ,CAACW,IAAI,EAAEN,GAAG,CAAC,CAAC;AACjD,CAAC;AAED,OAAO,MAAMO,gBAAgB,GAAGA,CAACX,IAAI,EAAEC,IAAI,EAAEO,IAAI,KAAK;EAClD,OAAOA,IAAI,CAACC,IAAI,CAAC,CAACL,GAAG,EAAEQ,CAAC,KAAKb,QAAQ,CAACK,GAAG,EAAEJ,IAAI,CAAC,IAAIY,CAAC,GAAG,CAAC,GAAGJ,IAAI,CAACK,MAAM,IAAId,QAAQ,CAACS,IAAI,CAACI,CAAC,GAAG,CAAC,CAAC,EAAEX,IAAI,CAAC,CAAC;AAC3G,CAAC;AAED,OAAO,MAAMa,UAAU,GAAGA,CAACd,IAAI,EAAEC,IAAI,KAAK;EACtC,OAAO,CAACF,QAAQ,CAACC,IAAI,EAAEC,IAAI,CAAC,IAAIc,IAAI,CAACC,GAAG,CAAChB,IAAI,CAAC,CAAC,CAAC,GAAGC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAIc,IAAI,CAACC,GAAG,CAAChB,IAAI,CAAC,CAAC,CAAC,GAAGC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACxG,CAAC;AAED,MAAMgB,6BAA6B,GAAInB,GAAG,IAAK;EAC3C,MAAMoB,OAAO,GAAGH,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACK,IAAI,CAACtB,GAAG,CAAC,CAAC;EAC1C,OAAOiB,IAAI,CAACM,GAAG,CAAC,CAAC,EAAEH,OAAO,CAAC,KAAKpB,GAAG,GAAGA,GAAG,GAAGiB,IAAI,CAACM,GAAG,CAAC,CAAC,EAAEH,OAAO,GAAG,CAAC,CAAC;AACxE,CAAC;AAED,OAAO,MAAMI,UAAU,GAAGA,CAACd,IAAI,EAAEH,IAAI,EAAEC,YAAY,KAAKW,6BAA6B,CAACT,IAAI,CAACe,MAAM,CAAC,CAACC,MAAM,EAAEpB,GAAG,KAAKoB,MAAM,GAAGrB,UAAU,CAACC,GAAG,EAAEC,IAAI,EAAEC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}